heat_template_version: 2018-08-31

description: Template to deploy all virtual machines of the final scenario

resources:
#
# Network resources definition
#
  net1:
    type: OS::Neutron::Net
    properties:
      name: net1
  subnet1:
    type: OS::Neutron::Subnet
    properties:
     name: subnet1
     network_id: {get_resource: net1}
     cidr: 10.1.1.0/24
  net2:
    type: OS::Neutron::Net
    properties:
      name: net2
  subnet2:
    type: OS::Neutron::Subnet
    properties:
     name: subnet2
     network_id: {get_resource: net2}
     cidr: 10.1.2.0/24
  gw_port1:
    type: OS::Neutron::Port
    properties:
      network: {get_resource: net1}
  router:
    type: OS::Neutron::Router
    properties:
      external_gateway_info: { network: ExtNet}
  router_if1:
    type: OS::Neutron::RouterInterface
    properties:
      router_id: { get_resource: router }
      port_id: { get_resource: gw_port1 }
#
# Web app servers definition
#
  s1:
    type: OS::Nova::Server
    properties:
      name: s1
      image: xenial-server-cloudimg-amd64-vnx
      flavor: m1.smaller
      networks:
       - network: {get_resource: net1}
       - network: {get_resource: net2}

  s2:
    type: OS::Nova::Server
    properties:
      name: s2
      image: xenial-server-cloudimg-amd64-vnx
      flavor: m1.smaller
      networks:
       - network: {get_resource: net1}
       - network: {get_resource: net2}

  s3:
    type: OS::Nova::Server
    properties:
      name: s3
      image: xenial-server-cloudimg-amd64-vnx
      flavor: m1.smaller
      networks:
       - network: {get_resource: net1}
       - network: {get_resource: net2}

#
# Admin server definition
#
  admin:
    type: OS::Nova::Server
    properties:
      name: admin
      image: xenial-server-cloudimg-amd64-vnx
      flavor: m1.smaller
      networks:
       - network: {get_resource: net1}
       - network: {get_resource: net2}

#
# Load Balancer definition
#
  lb:
    type: OS::Neutron::LBaaS::LoadBalancer
    properties:
     name: LB
     vip_subnet: {get_resource: subnet1}

#
# Firewall, rules and policies
#
  fw:
    type: OS::Neutron::Firewall
    properties:
      description: Firewall para filtrar el trafico exterior
      firewall_policy_id: {get_resource: fw_policies}
      name: Cortafuegos
      value_specs: {...}
  fw_policies:
    type: OS::Neutron::FirewallPolicy
    properties:
      audited: Boolean
      description: String
      firewall_rules: [Value, Value, ...]
      name: String
      shared: Boolean
  fw_rules:
    type: OS::Neutron::FirewallRule
    properties:
      action: String
      description: String
      destination_ip_address: String
      destination_port: String
      enabled: Boolean
      ip_version: String
      name: String
      protocol: String
      shared: Boolean
      source_ip_address: String
      source_port: String
