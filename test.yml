heat_template_version: 2018-08-31

description: Template to deploy all virtual machines of the final scenario

resources:
  # Network resources definition
  net1:
    type: OS::Neutron::Net
    properties:
      name: net1
  subnet1:
    type: OS::Neutron::Subnet
    properties:
     name: subnet1
     network_id: {get_resource: net1}
     allocation_pools: [{"start": 10.1.1.2, "end": 10.1.1.20}]
     gateway_ip: 10.1.1.1
     cidr: 10.1.1.0/24
  net2:
    type: OS::Neutron::Net
    properties:
      name: net2
  subnet2:
    type: OS::Neutron::Subnet
    properties:
     name: subnet2
     network_id: {get_resource: net2}
     allocation_pools: [{"start": 10.1.2.2, "end": 10.1.2.20}]
     gateway_ip: 10.1.2.1
     cidr: 10.1.2.0/24
  router:
    type: OS::Neutron::Router
    properties:
      name: "Firewall"
      external_gateway_info: {network: ExtNet}
  router_if1:
    type: OS::Neutron::RouterInterface
    properties:
      router_id: { get_resource: router }
      subnet_id: { get_resource: subnet1}
  # Floating IPs association
  port1:
    type: OS::Neutron::Port
    properties:
      network: { get_resource: net1 }
  fip_admin:
    type: OS::Neutron::FloatingIP
    properties:
      floating_network_id: {get_resource: net1}
      port_id: {get_resource: port1}
#  fip_lb:
#    type: OS::Neutron::FloatingIP
#    properties:
#      floating_network_id: {get_resource: net1}
#  association_admin:
#    type: OS::Nova::FloatingIPAssociation
#    properties:
#      floating_ip: { get_resource: fip_admin }
#      server_id: { get_resource: admin }
#  association_lb:
#    type: OS::Nova::FloatingIPAssociation
#    properties:
#      floating_ip: { get_resource: fip_lb }
#      server_id: { get_resource: lb }
  # Key pair creation
  my_key:
    type: OS::Nova::KeyPair
    properties:
      save_private_key: true
      name: my_key
  # Web App Servers definition
  s1:
    type: OS::Nova::Server
    properties:
      name: s1
      image: xenial-server-cloudimg-amd64-vnx
      flavor: m1.smaller
      networks:
       - network: {get_resource: net1}
       - network: {get_resource: net2}
  s2:
    type: OS::Nova::Server
    properties:
      name: s2
      image: xenial-server-cloudimg-amd64-vnx
      flavor: m1.smaller
      networks:
       - network: {get_resource: net1}
       - network: {get_resource: net2}
  s3:
    type: OS::Nova::Server
    properties:
      name: s3
      image: xenial-server-cloudimg-amd64-vnx
      flavor: m1.smaller
      networks:
       - network: {get_resource: net1}
       - network: {get_resource: net2}
  # MongoDB Server
  bbdd:
    type: OS::Nova::Server
    properties:
      name: bbdd
      image: mongoVM
      flavor: m1.smaller
      user_data_format: RAW
      user_data: |
        #cloud-config
        runcmd:
          - service mongod start
      networks:
       - network: {get_resource: net2}
  # Load Balancer definition
  lb:
    type: OS::Neutron::LBaaS::LoadBalancer
    properties:
     name: LB
     vip_subnet: {get_resource: subnet1}
  # Admin Server definition
  admin:
    type: OS::Nova::Server
    properties:
      name: admin
      image: xenial-server-cloudimg-amd64-vnx
      key_name: { get_resource: my_key }
      flavor: m1.smaller
      networks:
       - network: {get_resource: net1}
       - network: {get_resource: net2}
